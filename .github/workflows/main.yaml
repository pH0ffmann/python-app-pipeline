name: Pipeline CI/CD

on:
  workflow_dispatch:
  
jobs:
  SAST:
      name: SAST
      runs-on: ubuntu-latest
      container:
        image: semgrep/semgrep
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Run Semgrep
          run: semgrep ci
          env:
            SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          if: "github.actor != 'dependabot[bot]'"
        - name: Safety
          uses: pyupio/safety-action@v1
          with:
            api-key: ${{ secrets.SAFETY_API_KEY }}
        - name: bandit
          run: |
            pip install bandit
            bandit app.py -f html -o bandit-report.html --quiet
            bandit app.py
          continue-on-error: true
        - name: Upload Bandit Report
          uses: actions/upload-artifact@v4
          with:
            name: bandit-report
            path: bandit-report.html

  TEST:
    name: PyTest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Dependencies
      run: |
        pip install -r requirements.txt
    - name: Run test
      run: pytest -v test_app.py

  DAST:
    name: DAST
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Run App
        run: nohup python3 app.py &
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:5000'
          artifact_name: zap-report.html
          allow_issue_writing: false
      - name: ls
        run: ls
      - name: Upload Owasp Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html

  trivy:
    name: Trivy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: docker build -t python:pipeline .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'python:pipeline'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml
  
  report:
    name: Owasp and Bandit report
    runs-on: ubuntu-latest
    needs: [SAST, DAST]
    steps:
      - name: Download Bandit Report
        uses: actions/download-artifact@v4
        with:
          name: bandit-report
      - name: Download Owasp Report
        uses: actions/download-artifact@v4
        with:
          name: zap-report
      - name: ls
        run: ls
      - name: Send ZAP and Bandit Report to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -X POST -H "Content-Type: multipart/form-data" \
            -F "content=Novo relat√≥rio OWASP ZAP e Bandit!" \
            -F "file=@report_html.html" \
            -F "file1=@bandit-report.html" \
            "$DISCORD_WEBHOOK"
